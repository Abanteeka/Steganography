Index: libs/text_steganography.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># TEXT STEGANOGRAPHY OPERATIONS\r\n# 1. Encode the Text message\r\n# 2. Decode the Text message\r\n# 3. Exit\r\nimport os\r\n\r\n\r\ndef text_steganography(file):\r\n    def EncodeTheText(text):\r\n        i = 0\r\n        add = ''\r\n        while i < len(text):\r\n            t = ord(text[i])\r\n            if 32 <= t <= 64:\r\n                t1 = t + 48\r\n                t2 = t1 ^ 170\r\n                res = bin(t2)[2:].zfill(8)\r\n                add = add + \"0011\" + res\r\n            else:\r\n                t1 = t - 48\r\n                t2 = t1 ^ 170\r\n                res = bin(t2)[2:].zfill(8)\r\n                add = add + \"0110\" + res\r\n            i = i + 1\r\n        res1 = add + \"111111111111\"\r\n        print(\"The String after binary conversion appling all the transformation:-{}\".format(res1))\r\n        print(\"Length of binary after Conersion:-{}\".format(len(res1)))\r\n        ZWC = {\"00\": u'\\u200C', \"01\": u'\\u202C', \"11\": u'\\u202D', \"10\": u'\\u200E'}\r\n        file1 = open(file, 'r+')\r\n        f = file.split(\"/\")\r\n        f[len(f)-1] = \"/temp.txt\"\r\n        aa = file.split(\"/\")\r\n        a = ''\r\n        for i in range(1, len(aa) - 1):\r\n            a = a + \"/\" + aa[i]\r\n        a = a + \"/\" + \"temp.txt\"\r\n        file3 = open(a, 'w+', encoding='utf-8')\r\n        word = []\r\n        for line in file1:\r\n            word = word + line.split()\r\n        ii = 0\r\n        while ii < len(res1):\r\n            s = word[int(ii/12)]\r\n            j = 0\r\n            w = \"\"\r\n            while j < 12:\r\n                x = res1[j+ii] + res1[ii+j+1]\r\n                w = w + ZWC[x]\r\n                j = j + 2\r\n            s1 = s + w\r\n            file3.write(s1)\r\n            file3.write(\" \")\r\n            ii = ii + 12\r\n        t = int(len(res1)/12)\r\n        while t < len(word):\r\n            file3.write(word[t])\r\n            file3.write(\" \")\r\n            t = t + 1\r\n        file3.close()\r\n        file1.close()\r\n        os.remove(file)\r\n        os.rename(a, file)\r\n        print(\"Stego file has successfully generated\")\r\n\r\n    def Encode():\r\n        count2 = 0\r\n        file1 = open(file, 'r')\r\n        for line in file1:\r\n            for word in line.split():\r\n                count2 = count2 + 1\r\n        file1.close()\r\n        bt = int(count2)\r\n        print(\"Maximum number of words that can be inserted:- {}\".format(int(bt/6)))\r\n        text1 = input(\"Enter data to be encoded:\")\r\n        if len(text1) > bt:\r\n            print(\"String is too big please reduce string size\")\r\n            Encode()\r\n        else:\r\n            EncodeTheText(text1)\r\n\r\n    def BinaryToDecimal(binary):\r\n        string = int(binary, 2)\r\n        return string\r\n\r\n    def Decode():\r\n        ZWC_reverse = {u\"\\u200C\": \"00\", u'\\u202C': \"01\", u'\\u202D': \"11\", u'\\u200E': \"10\"}\r\n        file4 = open(file, 'r', encoding=\"utf-8\")\r\n        temp = ''\r\n        for line in file4:\r\n            for word in line.split():\r\n                T1 = word\r\n                binary_extract = \"\"\r\n                for letters in T1:\r\n                    if letters in ZWC_reverse:\r\n                        binary_extract = binary_extract + ZWC_reverse[letters]\r\n                    if binary_extract == \"111111111111\":\r\n                        break\r\n                    else:\r\n                        temp = temp + binary_extract\r\n        print(\"Encrypted message presented in code bits: {}\".format(temp))\r\n        print(\"Length of encoded bits:- \".format(len(temp)))\r\n        i = 0\r\n        a = 0\r\n        b = 4\r\n        c = 4\r\n        d = 12\r\n        final = ''\r\n        while i < len(temp):\r\n            t3 = temp[a:b]\r\n            a = a + 12\r\n            b = b + 12\r\n            i = i + 12\r\n            t4 = temp[c:d]\r\n            c = c + 12\r\n            d = d + 12\r\n            if t3 == \"0110\":\r\n                for i in range(0, len(t4), 8):\r\n                    temp_data = t4[i:i + 8]\r\n                    decimal_data = BinaryToDecimal(temp_data)\r\n                    final = final + chr((decimal_data ^ 170) + 48)\r\n            elif t3 == \"0011\":\r\n                for i in range(0, len(t4), 8):\r\n                    temp_data = t4[i:i + 8]\r\n                    decimal_data = BinaryToDecimal(temp_data)\r\n                    final = final + chr((decimal_data ^ 170) - 48)\r\n        print(\"Message after decoding from the stego file:- {}\".format(final))\r\n\r\n    while True:\r\n        print(\"TEXT STEGANOGRAPHY OPERATIONS\")\r\n        print(\"1. Encode the Text message\")\r\n        print(\"2. Decode the Text message\")\r\n        print(\"3. Exit\")\r\n        n = int(input(\"Enter Your Choice: \"))\r\n        if n == 1:\r\n            Encode()\r\n        elif n == 2:\r\n            Decode()\r\n        elif n == 3:\r\n            break\r\n        else:\r\n            print(\"INVALID CHOICE\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libs/text_steganography.py b/libs/text_steganography.py
--- a/libs/text_steganography.py	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ b/libs/text_steganography.py	(date 1669996276792)
@@ -23,8 +23,8 @@
                 add = add + "0110" + res
             i = i + 1
         res1 = add + "111111111111"
-        print("The String after binary conversion appling all the transformation:-{}".format(res1))
-        print("Length of binary after Conersion:-{}".format(len(res1)))
+        print("The String after binary conversion applying all the transformation:-{}".format(res1))
+        print("Length of binary after Conversion:-{}".format(len(res1)))
         ZWC = {"00": u'\u200C', "01": u'\u202C', "11": u'\u202D', "10": u'\u200E'}
         file1 = open(file, 'r+')
         f = file.split("/")
Index: .idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14_[Changes]/shelved.patch	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,19 +0,0 @@
-Index: Steganography.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from libs import audio_steganography\r\nfrom libs import image_steganography\r\nfrom libs import text_steganography\r\nfrom libs import vedio_steganography\r\n\r\n\r\ndef main():\r\n    pass\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\n# MAIN MENU\r\n#\r\n# 1. IMAGE STEGANOGRAPHY {Hiding Text in Image cover file}\r\n# 2. TEXT STEGANOGRAPHY {Hiding Text in Text cover file}\r\n# 3. AUDIO STEGANOGRAPHY {Hiding Text in Audio cover file}\r\n# 4. VIDEO STEGANOGRAPHY {Hiding Text in Video cover file}\r\n# 5. Exit\r\n\r\n\r\n# SYS\r\n# python Steganography.py -<e-->encode> <file location>\r\n# python Steganography.py -<d-->decode> <file location>\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Steganography.py b/Steganography.py
---- a/Steganography.py	(revision 5f262827bf097849b73d954e7a92b396f521ad48)
-+++ b/Steganography.py	(date 1669273184660)
-@@ -20,7 +20,7 @@
- # 5. Exit
- 
- 
--# SYS
-+# SYS![](../../AppData/Local/Temp/download.jpg)
- # python Steganography.py -<e-->encode> <file location>
- # python Steganography.py -<d-->decode> <file location>
- 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40__Changes_.xml	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_28-11-2022_12_40_[Changes]" date="1669619449741" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 28-11-2022 12:40 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33__Changes_.xml	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_28-11-2022_11_33_[Changes]" date="1669615424399" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 28-11-2022 11:33 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14__Changes_.xml	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_24-11-2022_20_14_[Changes]" date="1669301092435" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_24-11-2022_20_14_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 24-11-2022 20:14 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_12_40_[Changes]/shelved.patch	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,81 +0,0 @@
-Index: libs/vedio_steganography.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+># VIDEO STEGANOGRAPHY OPERATIONS\r\n# 1. Encode the Text message\r\n# 2. Decode the Text message\r\n# 3. Exit\r\nimport cv2\r\n\r\n\r\ndef vedio_steganography(file):\r\n\r\n    def encryption(data):\r\n        return data\r\n\r\n    def msgtobinary(data):\r\n        return data\r\n\r\n    def embed(frame):\r\n        data = input(\"Enter the data to be Encoded in Video :\")\r\n        data = encryption(data)\r\n        print(\"The Encrypted data is:\", data)\r\n        if len(data) == 0:\r\n            raise ValueError(\"Data entered to be encoded is empty\")\r\n        data = data + '*^*^*'\r\n\r\n        binary_data = msgtobinary(data)\r\n        return frame\r\n\r\n    def Encode():\r\n        cap = cv2.VideoCapture(\"video.mp4\")\r\n        vidcap = cv2.VideoCapture(\"video.mp4\")\r\n        fourcc = cv2.VideoWriter_fourcc(*'XVID')\r\n        frame_width = int(vidcap.get(3))\r\n        frame_height = int(vidcap.get(4))\r\n\r\n        size = (frame_width, frame_height)\r\n        out = cv2.VideoWriter('stego.mp4', fourcc, 25.0, size)\r\n        max_frame = 0\r\n        while cap.isOpened():\r\n            ret, frame = cap.read()\r\n            if not ret:\r\n                break\r\n            max_frame = max_frame + 1\r\n        cap.release()\r\n        print(\"Total Number of Frame in Selected Video:\", max_frame)\r\n\r\n        n = int(input(\"Enter the frame number where you want to embed data:\"))\r\n        frame_number = 0\r\n        while vidcap.isOpened():\r\n            frame_number = frame_number + 1\r\n            ret, frame = vidcap.read()\r\n            if not ret:\r\n                break\r\n            if frame_number == n:\r\n                change_frame_with = embed(frame)\r\n                frame_ = change_frame_with\r\n                frame = change_frame_with\r\n            out.write(frame)\r\n        print(\"Encoded the data successfully in the video file\")\r\n        return frame_\r\n\r\n\r\n\r\n    def Decode():\r\n        pass\r\n\r\n    while True:\r\n        print(\"1.Encode\")\r\n        print(\"2.Decode\")\r\n        print(\"3.Exit\")\r\n        n = int(input(\"Enter Your choice:\"))\r\n        if n == 1:\r\n            Encode()\r\n        elif n == 2:\r\n            Decode()\r\n        elif n == 3:\r\n            break\r\n        else:\r\n            print(\"invalid Choice\")
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/libs/vedio_steganography.py b/libs/vedio_steganography.py
---- a/libs/vedio_steganography.py	(revision 9f80841d5972a47afd5db91cd57a19614c156d5b)
-+++ b/libs/vedio_steganography.py	(date 1669619325044)
-@@ -5,8 +5,7 @@
- import cv2
- 
- 
--def vedio_steganography(file):
--
-+def video_steganography(file):
-     def encryption(data):
-         return data
- 
-@@ -57,10 +56,15 @@
-         print("Encoded the data successfully in the video file")
-         return frame_
- 
--
--
--    def Decode():
--        pass
-+    def Decode(frame):
-+        cap = cv2.VideoCapture('stego.mp4')
-+        max_frame = 0;
-+        while cap.isOpened():
-+            ret, frame = cap.read()
-+            if not ret:
-+                break
-+            max_frame += 1
-+        print("Total number of Frame in selected ")
- 
-     while True:
-         print("1.Encode")
-@@ -74,4 +78,4 @@
-         elif n == 3:
-             break
-         else:
--            print("invalid Choice")
-\ No newline at end of file
-+            print("invalid Choice")
-Index: libs/text_steganography.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+># TEXT STEGANOGRAPHY OPERATIONS\r\n# 1. Encode the Text message\r\n# 2. Decode the Text message\r\n# 3. Exit\r\nimport os\r\n\r\n\r\ndef text_steganography(file):\r\n    def EncodeTheText(text):\r\n        i = 0\r\n        add = ''\r\n        while i < len(text):\r\n            t = ord(text[i])\r\n            if 32 <= t <= 64:\r\n                t1 = t + 48\r\n                t2 = t1 ^ 170\r\n                res = bin(t2)[2:].zfill(8)\r\n                add = add + \"0011\" + res\r\n            else:\r\n                t1 = t - 48\r\n                t2 = t1 ^ 170\r\n                res = bin(t2)[2:].zfill(8)\r\n                add = add + \"0110\" + res\r\n            i = i + 1\r\n        res1 = add + \"111111111111\"\r\n        print(\"The String after binary conversion appling all the transformation:-{}\".format(res1))\r\n        print(\"Length of binary after Conersion:-{}\".format(len(res1)))\r\n        ZWC = {\"00\": u'\\u200C', \"01\": u'\\u202C', \"11\": u'\\u202D', \"10\": u'\\u200E'}\r\n        file1 = open(file, 'r+')\r\n        f = file.split(\"/\")\r\n        f[len(f)-1] = \"/temp.txt\"\r\n        aa = file.split(\"/\")\r\n        a = ''\r\n        for i in range(1, len(aa) - 1):\r\n            a = a + \"/\" + aa[i]\r\n        a = a + \"/\" + \"temp.txt\"\r\n        file3 = open(a, 'w+', encoding='utf-8')\r\n        word = []\r\n        for line in file1:\r\n            word = word + line.split()\r\n        ii = 0\r\n        while ii < len(res1):\r\n            s = word[int(ii/12)]\r\n            j = 0\r\n            w = \"\"\r\n            while j < 12:\r\n                x = res1[j+ii] + res1[ii+j+1]\r\n                w = w + ZWC[x]\r\n                j = j + 2\r\n            s1 = s + w\r\n            file3.write(s1)\r\n            file3.write(\" \")\r\n            ii = ii + 12\r\n        t = int(len(res1)/12)\r\n        while t < len(word):\r\n            file3.write(word[t])\r\n            file3.write(\" \")\r\n            t = t + 1\r\n        file3.close()\r\n        file1.close()\r\n        os.remove(file)\r\n        os.rename(a, file)\r\n        print(\"Stego file has successfully generated\")\r\n\r\n    def Encode():\r\n        count2 = 0\r\n        file1 = open(file, 'r')\r\n        for line in file1:\r\n            for word in line.split():\r\n                count2 = count2 + 1\r\n        file1.close()\r\n        bt = int(count2)\r\n        print(\"Maximum number of words that can be inserted:- {}\".format(int(bt/6)))\r\n        text1 = input(\"Enter data to be encoded:\")\r\n        if len(text1) > bt:\r\n            print(\"String is too big please reduce string size\")\r\n            Encode()\r\n        else:\r\n            EncodeTheText(text1)\r\n\r\n    def BinaryToDecimal(binary):\r\n        string = int(binary, 2)\r\n        return string\r\n\r\n    def Decode():\r\n        ZWC_reverse = {u\"\\u200C\": \"00\", u'\\u202C': \"01\", u'\\u202D': \"11\", u'\\u200E': \"10\"}\r\n        file4 = open(file, 'r', encoding=\"utf-8\")\r\n        temp = ''\r\n        for line in file4:\r\n            for word in line.split():\r\n                T1 = word\r\n                binary_extract = \"\"\r\n                for letters in T1:\r\n                    if letters in ZWC_reverse:\r\n                        binary_extract = binary_extract + ZWC_reverse[letters]\r\n                    if binary_extract == \"111111111111\":\r\n                        break\r\n                    else:\r\n                        temp = temp + binary_extract\r\n        print(\"Encrypted message presented in code bits: {}\".format(temp))\r\n        print(\"Length of encoded bits:- \".format(len(temp)))\r\n        i = 0\r\n        a = 0\r\n        b = 4\r\n        c = 4\r\n        d = 12\r\n        final = ''\r\n        while i < len(temp):\r\n            t3 = temp[a:b]\r\n            a = a + 12\r\n            b = b + 12\r\n            i = i + 12\r\n            t4 = temp[c:d]\r\n            c = c + 12\r\n            d = d + 12\r\n            if t3 == \"0110\":\r\n                for i in range(0, len(t4), 8):\r\n                    temp_data = t4[i:i + 8]\r\n                    decimal_data = BinaryToDecimal(temp_data)\r\n                    final = final + chr((decimal_data ^ 170) + 48)\r\n            elif t3 == \"0011\":\r\n                for i in range(0, len(t4), 8):\r\n                    temp_data = t4[i:i + 8]\r\n                    decimal_data = BinaryToDecimal(temp_data)\r\n                    final = final + chr((decimal_data ^ 170) - 48)\r\n        print(\"Message after decoding from the stego file:- {}\".format(final))\r\n\r\n    while True:\r\n        print(\"TEXT STEGANOGRAPHY OPERATIONS\")\r\n        print(\"1. Encode the Text message\")\r\n        print(\"2. Decode the Text message\")\r\n        print(\"3. Exit\")\r\n        n = int(input(\"Enter Your Choice: \"))\r\n        if n == 1:\r\n            Encode()\r\n        elif n == 2:\r\n            Decode()\r\n        elif n == 3:\r\n            break\r\n        else:\r\n            print(\"INVALID CHOICE\")\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/libs/text_steganography.py b/libs/text_steganography.py
---- a/libs/text_steganography.py	(revision 9f80841d5972a47afd5db91cd57a19614c156d5b)
-+++ b/libs/text_steganography.py	(date 1669615601711)
-@@ -138,4 +138,4 @@
-         elif n == 3:
-             break
-         else:
--            print("INVALID CHOICE")
-+            print("INVALID CHOICE")
-\ No newline at end of file
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10 (Steganography)\" project-jdk-type=\"Python SDK\" />\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision 9f80841d5972a47afd5db91cd57a19614c156d5b)
-+++ b/.idea/misc.xml	(date 1669615620897)
-@@ -1,4 +1,4 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (Steganography)" project-jdk-type="Python SDK" />
-+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_28-11-2022_11_33_[Changes]/shelved.patch	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,28 +0,0 @@
-Index: libs/text_steganography.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+># TEXT STEGANOGRAPHY OPERATIONS\r\n# 1. Encode the Text message\r\n# 2. Decode the Text message\r\n# 3. Exit\r\n\r\ndef text_steganography():\r\n    def Encode():\r\n        def txt_Encoder(text):\r\n            l = len(text)\r\n            i = 0\r\n            add = ''\r\n            while i < l:\r\n                t = ord(text[i])\r\n                if 32 <= t <= 64:\r\n                    t1 = t + 48\r\n                    t2 = t1 ^ 170\r\n                    res = bin(t2)[2:].zfill(8)\r\n                    add += \"0011\" + res\r\n                else:\r\n                    t1 = t - 48\r\n                    t2 = t1 ^ 170\r\n                    res = bin(t2)[2:].zfill(8)\r\n                    add += \"0110\" + res\r\n\r\n                i += 1\r\n\r\n            res1 = add + \"111111111111\"\r\n            print(\"The string after binary conversion applying all the transformation: \" + (res1))\r\n            length = len(res1)\r\n            print(\"Length of binary after conversion: \", length)\r\n            HM_SK = \"\"\r\n            ZWC = {\"00\": u'\\u200C', \"01\": u'\\u202C', \"11\": u'\\u202D', \"10\": u'\\u200E'}\r\n            file_1 = open(\"cover_text.txt\", \"r+\")\r\n            name_of_file = input(\"\\nEnter the name of thr stego file after encoding(with extention): \")\r\n            file3 = open(name_of_file, \"w+\", encoding=\"utf-8\")\r\n            word_list = []\r\n            for Line in file_1:\r\n                word_list += Line.split()\r\n            i = 0\r\n            while i < len(res1):\r\n                s = word_list[int(i / 12)]\r\n                j = 0\r\n                x = \"\"\r\n                HM_SK = \"\"\r\n                while j < 12:\r\n                    x = res1[j + 1] + res1[i + j + 1]\r\n                    HM_SK += ZWC[x]\r\n                    j += 2\r\n                s1 = s + HM_SK\r\n                file3.write(s1)\r\n                file3.write(\" \")\r\n                i += 12\r\n            t = int(len(res1) / 12)\r\n            while t < len(word_list):\r\n                file3.write(word_list[t])\r\n                file3.write(\" \")\r\n                t += 1\r\n            file3.close()\r\n            file_1.close()\r\n            print(\"Stego file has successfully generated\")\r\n\r\n        count2 = 0\r\n        file1 = open(\"cover_text.txt\", \"r\")\r\n        for line in file1:\r\n            for word in line.split():\r\n                count2 = count2 + 1\r\n\r\n        file1.close()\r\n        bt = int(count2)\r\n        print(\"Maximum number of words that can be inserted: \", int(bt / 6))\r\n        text1 = input(\"Enter data to be encoded: \")\r\n        l = len(text1)\r\n\r\n        if l <= bt:\r\n            print(\" The text  can be hidden in the cover file\")\r\n            txt_Encoder(text1)\r\n        else:\r\n            print(\"String is too big please reduce string size\")\r\n            Encode()\r\n\r\n    def BinaryToDecimal(binary):\r\n        string = int(binary, 2)\r\n        return string\r\n\r\n    def Decode():\r\n        ZWC_reverse = {u'\\u200C': \"00\", u'\\u202C': \"01\", u'\\u202D': \"11\", u'\\u200E': \"10\"}\r\n        stego = input(\"Please enter the stego file name(with extension) to decode the message: \")\r\n        file_4 = open(stego, \"r\", encoding=\"utf=8\")\r\n        temp = ''\r\n        for Line in file_4:\r\n            for words in Line.split():\r\n                T1 = words\r\n                binary_extract = \"\"\r\n                for letter in T1:\r\n                    if letter in ZWC_reverse:\r\n                        binary_extract += ZWC_reverse[letter]\r\n                if binary_extract == \"111111111111\":\r\n                    break\r\n                else:\r\n                    temp += binary_extract\r\n        print(\"Encrypted message presented in code bits: \", temp)\r\n        length = len(temp)\r\n        print(\"length of encoded bits: \", length)\r\n        i = 0\r\n        a = 0\r\n        b = 4\r\n        c = 4\r\n        d = 12\r\n        final = \"\"\r\n        while i < len(temp):\r\n            t3 = temp[a:b]\r\n            a += 12\r\n            b += 12\r\n            i += 12\r\n            t4 = temp[c:d]\r\n            c += 12\r\n            d += 12\r\n            if t3 == '0110':\r\n                decimal_data = BinaryToDecimal(t4)\r\n                final += str((decimal_data ^ 170) + 48)\r\n            elif t3 == '0011':\r\n                decimal_data = BinaryToDecimal(t4)\r\n                final += str((decimal_data ^ 170) - 48)\r\n        print(\"Message after decoding from the stego file: \", final)\r\n\r\n    while True:\r\n        print(\"TEXT STEGANOGRAPHY OPERATIONS\")\r\n        print(\"1. Encode the Text message\")\r\n        print(\"2. Decode the Text message\")\r\n        print(\"3. Exit\")\r\n        n = int(input(\"Enter Your Choice: \"))\r\n        if n == 1:\r\n            Encode()\r\n        elif n == 2:\r\n            Decode()\r\n        elif n == 3:\r\n            break\r\n        else:\r\n            print(\"INVALID CHOICE\")\r\n\r\n\r\ntext_steganography()\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/libs/text_steganography.py b/libs/text_steganography.py
---- a/libs/text_steganography.py	(revision 13af924e2b43e60aea55afce4f9a4c7255a20cfd)
-+++ b/libs/text_steganography.py	(date 1669529794064)
-@@ -122,6 +122,7 @@
-                 decimal_data = BinaryToDecimal(t4)
-                 final += str((decimal_data ^ 170) - 48)
-         print("Message after decoding from the stego file: ", final)
-+        return final
- 
-     while True:
-         print("TEXT STEGANOGRAPHY OPERATIONS")
-@@ -132,7 +133,8 @@
-         if n == 1:
-             Encode()
-         elif n == 2:
--            Decode()
-+            d = Decode()
-+            print("data _ d:{}".format(d))
-         elif n == 3:
-             break
-         else:
Index: .idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51_[Changes]/shelved.patch	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,160 +0,0 @@
-Index: libs/text_steganography.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>import numpy as np\r\nimport pandas as pd\r\nimport os\r\nimport cv2\r\nfrom matplotlib import pyplot as plt\r\n\r\n\r\n# TEXT STEGANOGRAPHY OPERATIONS\r\n# 1. Encode the Text message\r\n# 2. Decode the Text message\r\n# 3. Exit\r\n\r\ndef text_steganography():\r\n    def Encode():\r\n        def txt_encode(text):\r\n            pass\r\n\r\n    def BinaryToDecimal(binary):\r\n        pass\r\n\r\n    def Decode():\r\n        pass\r\n\r\n    while True:\r\n        print(\"TEXT STEGANOGRAPHY OPERATIONS\\n\")\r\n        print(\"1. Encode the Text message\")\r\n        print(\"2. Decode the Text message\")\r\n        print(\"3. Exit\")\r\n        n = int(input(\"Enter Your Choice: \"))\r\n        if n == 1:\r\n            Encode()\r\n        elif n == 2:\r\n            Decode()\r\n        elif n == 3:\r\n            break\r\n        else:\r\n            print(\"INVALID CHOICE\")\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/libs/text_steganography.py b/libs/text_steganography.py
---- a/libs/text_steganography.py	(revision c509ff8bbf1ad7a663dad59fb731b58d4b2235a1)
-+++ b/libs/text_steganography.py	(date 1669311264802)
-@@ -12,8 +12,71 @@
- 
- def text_steganography():
-     def Encode():
--        def txt_encode(text):
--            pass
-+        def txt_Encoder(text):
-+            l = len(text)
-+            i = 0
-+            add = ''
-+            while i < l:
-+                t = ord(text[i])
-+                if (t >= 32 and t <= 64):
-+                    t1 = t + 48
-+                    t2 = t1 ^ 170
-+                    res = bin(t2)[2:].zfill(8)
-+                    add += "0011" + res
-+                else:
-+                    t1 = t - 48
-+                    t2 = t1 ^ 170
-+                    res = bin(t2)[2:].zfill(8)
-+                    add += "0110" + res
-+
-+                i += 1
-+
-+            res1 = add+"111111111111"
-+            print("The string after binary conversion applying all the transformation: "+(res1))
-+            length = len(res1)
-+            print("Length of binary after conversion: ", length)
-+            HM_SK = ""
-+            ZWC = {"00":u'\u200C', "01":u'\u202C', "11":u'\u202D', "10":u'\u200E'}
-+            file1 = open("cover_text.txt", "r+")
-+            name_of_file = input("\nEnter the name of thr stego file after encoding(with extention): ")
-+            file3 = open(name_of_file, "w+", encoding="utf-8")
-+            word = []
-+            for line in file1:
-+                word += line.split()
-+            i = 0
-+            while(i < len(res1)):
-+                s = word[int(i/12)]
-+                j = 0
-+                x = ""
-+                HM_SK = ""
-+                while(j<12):
-+                    x = res1[j + 1]+res1[i+j+1]
-+                    HM_SK += ZWC[x]
-+                    j += 2
-+                s1 = s+HM_SK
-+                file3.write(s1)
-+                file3.write(" ")
-+                i += 12
-+            t = int(len(res1)/12)
-+            while t<len(word):
-+                file3.write(word[t])
-+                file3.write(" ")
-+                t += 1
-+            file3.close()
-+            file1.close()
-+            print("\nStego file has successfully generated")
-+
-+            count2 = 0
-+            file1 = open("cover_text.txt", "r")
-+            for line in file1:
-+                for word in line.split():
-+                          count2 = count2+1
-+
-+            file1.close()
-+            bt = int(count2)
-+            print("Maximum number of words that can be inserted: ", int(bt/6))
-+
-+
- 
-     def BinaryToDecimal(binary):
-         pass
-Index: Steganography.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from libs import audio_steganography\r\nfrom libs import image_steganography\r\nfrom libs import text_steganography\r\nfrom libs import vedio_steganography\r\n\r\n\r\ndef main():\r\n    while True:\r\n        print(\"MAIN MENU\")\r\n        print(\"1. IMAGE STEGANOGRAPHY {Hiding Text in Image cover file}\")\r\n        print(\"2. TEXT STEGANOGRAPHY {Hiding Text in Text cover file}\")\r\n        print(\"3. AUDIO STEGANOGRAPHY {Hiding Text in Audio cover file}\")\r\n        print(\"4. VIDEO STEGANOGRAPHY {Hiding Text in Video cover file}\")\r\n        print(\"5. Exit\")\r\n        n = int(input(\"Enter Your Choice:\"))\r\n        if n == 1:\r\n            image_steganography.image_Stegonography()\r\n        elif n == 2:\r\n            text_steganography.text_steganography()\r\n        elif n == 3:\r\n            audio_steganography.audio_steganography()\r\n        elif n == 4:\r\n            vedio_steganography.vedio_steganography()\r\n        elif n == 5:\r\n            break\r\n        else:\r\n            print(\"Invalid Input\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\n# MAIN MENU\r\n#\r\n# 1. IMAGE STEGANOGRAPHY {Hiding Text in Image cover file}\r\n# 2. TEXT STEGANOGRAPHY {Hiding Text in Text cover file}\r\n# 3. AUDIO STEGANOGRAPHY {Hiding Text in Audio cover file}\r\n# 4. VIDEO STEGANOGRAPHY {Hiding Text in Video cover file}\r\n# 5. Exit\r\n\r\n\r\n# SYS![](../../AppData/Local/Temp/download.jpg)\r\n# python Steganography.py -<e-->encode> <file location>\r\n# python Steganography.py -<d-->decode> <file location>\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/Steganography.py b/Steganography.py
---- a/Steganography.py	(revision c509ff8bbf1ad7a663dad59fb731b58d4b2235a1)
-+++ b/Steganography.py	(date 1669316332495)
-@@ -39,7 +39,7 @@
- # 5. Exit
- 
- 
--# SYS![](../../AppData/Local/Temp/download.jpg)
-+# SYS![]
- # python Steganography.py -<e-->encode> <file location>
- # python Steganography.py -<d-->decode> <file location>
- 
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"d17f81a9-0fc4-49ad-a30b-3ec6265206b7\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/Steganography.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/Steganography.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Steganography.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Steganography.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/libs/text_steganography.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/libs/text_steganography.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HyucZ7gWUuA7EFDaM1ul6zsUUn\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/abant/PycharmProjects/Steganography&quot;\r\n  }\r\n}</component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"d17f81a9-0fc4-49ad-a30b-3ec6265206b7\" name=\"Changes\" comment=\"\" />\r\n      <created>1669269724505</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1669269724505</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision c509ff8bbf1ad7a663dad59fb731b58d4b2235a1)
-+++ b/.idea/workspace.xml	(date 1669316332695)
-@@ -1,9 +1,8 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="ChangeListManager">
--    <list default="true" id="d17f81a9-0fc4-49ad-a30b-3ec6265206b7" name="Changes" comment="">
--      <change beforePath="$PROJECT_DIR$/.idea/Steganography.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Steganography.iml" afterDir="false" />
--      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-+    <list default="true" id="d17f81a9-0fc4-49ad-a30b-3ec6265206b7" name="Changes" comment="Initial Commit">
-+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/Steganography.py" beforeDir="false" afterPath="$PROJECT_DIR$/Steganography.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/libs/text_steganography.py" beforeDir="false" afterPath="$PROJECT_DIR$/libs/text_steganography.py" afterDir="false" />
-     </list>
-@@ -27,7 +26,8 @@
-   &quot;keyToString&quot;: {
-     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
--    &quot;last_opened_file_path&quot;: &quot;C:/Users/abant/PycharmProjects/Steganography&quot;
-+    &quot;last_opened_file_path&quot;: &quot;C:/Users/abant/PycharmProjects/Steganography&quot;,
-+    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
-   }
- }</component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-@@ -39,6 +39,14 @@
-       <option name="presentableId" value="Default" />
-       <updated>1669269724505</updated>
-     </task>
-+    <task id="LOCAL-00001" summary="Initial Commit">
-+      <created>1669307163124</created>
-+      <option name="number" value="00001" />
-+      <option name="presentableId" value="LOCAL-00001" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1669307163124</updated>
-+    </task>
-+    <option name="localTasksCounter" value="2" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -52,4 +60,8 @@
-       </map>
-     </option>
-   </component>
-+  <component name="VcsManagerConfiguration">
-+    <MESSAGE value="Initial Commit" />
-+    <option name="LAST_COMMIT_MESSAGE" value="Initial Commit" />
-+  </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51__Changes_.xml	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ /dev/null	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_25-11-2022_10_51_[Changes]" date="1669353767390" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_25-11-2022_10_51_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 25-11-2022 10:51 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/Steganography.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.10 (Steganography)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Steganography.iml b/.idea/Steganography.iml
--- a/.idea/Steganography.iml	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ b/.idea/Steganography.iml	(date 1669781815316)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.10 (Steganography)" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10 (Steganography)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 8b2949a8e4c90eddbec2d481f3f049975983afbd)
+++ b/.idea/misc.xml	(date 1669781815363)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (Steganography)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
