Index: libs/text_steganography.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># TEXT STEGANOGRAPHY OPERATIONS\r\n# 1. Encode the Text message\r\n# 2. Decode the Text message\r\n# 3. Exit\r\n\r\ndef text_steganography():\r\n    def Encode():\r\n        def txt_Encoder(text):\r\n            l = len(text)\r\n            i = 0\r\n            add = ''\r\n            while i < l:\r\n                t = ord(text[i])\r\n                if 32 <= t <= 64:\r\n                    t1 = t + 48\r\n                    t2 = t1 ^ 170\r\n                    res = bin(t2)[2:].zfill(8)\r\n                    add += \"0011\" + res\r\n                else:\r\n                    t1 = t - 48\r\n                    t2 = t1 ^ 170\r\n                    res = bin(t2)[2:].zfill(8)\r\n                    add += \"0110\" + res\r\n\r\n                i += 1\r\n\r\n            res1 = add + \"111111111111\"\r\n            print(\"The string after binary conversion applying all the transformation: \" + (res1))\r\n            length = len(res1)\r\n            print(\"Length of binary after conversion: \", length)\r\n            HM_SK = \"\"\r\n            ZWC = {\"00\": u'\\u200C', \"01\": u'\\u202C', \"11\": u'\\u202D', \"10\": u'\\u200E'}\r\n            file_1 = open(\"cover_text.txt\", \"r+\")\r\n            name_of_file = input(\"\\nEnter the name of thr stego file after encoding(with extention): \")\r\n            file3 = open(name_of_file, \"w+\", encoding=\"utf-8\")\r\n            word_list = []\r\n            for Line in file_1:\r\n                word_list += Line.split()\r\n            i = 0\r\n            while i < len(res1):\r\n                s = word_list[int(i / 12)]\r\n                j = 0\r\n                x = \"\"\r\n                HM_SK = \"\"\r\n                while j < 12:\r\n                    x = res1[j + 1] + res1[i + j + 1]\r\n                    HM_SK += ZWC[x]\r\n                    j += 2\r\n                s1 = s + HM_SK\r\n                file3.write(s1)\r\n                file3.write(\" \")\r\n                i += 12\r\n            t = int(len(res1) / 12)\r\n            while t < len(word_list):\r\n                file3.write(word_list[t])\r\n                file3.write(\" \")\r\n                t += 1\r\n            file3.close()\r\n            file_1.close()\r\n            print(\"Stego file has successfully generated\")\r\n\r\n        count2 = 0\r\n        file1 = open(\"cover_text.txt\", \"r\")\r\n        for line in file1:\r\n            for word in line.split():\r\n                count2 = count2 + 1\r\n\r\n        file1.close()\r\n        bt = int(count2)\r\n        print(\"Maximum number of words that can be inserted: \", int(bt / 6))\r\n        text1 = input(\"Enter data to be encoded: \")\r\n        l = len(text1)\r\n\r\n        if l <= bt:\r\n            print(\" The text  can be hidden in the cover file\")\r\n            txt_Encoder(text1)\r\n        else:\r\n            print(\"String is too big please reduce string size\")\r\n            Encode()\r\n\r\n    def BinaryToDecimal(binary):\r\n        string = int(binary, 2)\r\n        return string\r\n\r\n    def Decode():\r\n        ZWC_reverse = {u'\\u200C': \"00\", u'\\u202C': \"01\", u'\\u202D': \"11\", u'\\u200E': \"10\"}\r\n        stego = input(\"Please enter the stego file name(with extension) to decode the message: \")\r\n        file_4 = open(stego, \"r\", encoding=\"utf=8\")\r\n        temp = ''\r\n        for Line in file_4:\r\n            for words in Line.split():\r\n                T1 = words\r\n                binary_extract = \"\"\r\n                for letter in T1:\r\n                    if letter in ZWC_reverse:\r\n                        binary_extract += ZWC_reverse[letter]\r\n                if binary_extract == \"111111111111\":\r\n                    break\r\n                else:\r\n                    temp += binary_extract\r\n        print(\"Encrypted message presented in code bits: \", temp)\r\n        length = len(temp)\r\n        print(\"length of encoded bits: \", length)\r\n        i = 0\r\n        a = 0\r\n        b = 4\r\n        c = 4\r\n        d = 12\r\n        final = \"\"\r\n        while i < len(temp):\r\n            t3 = temp[a:b]\r\n            a += 12\r\n            b += 12\r\n            i += 12\r\n            t4 = temp[c:d]\r\n            c += 12\r\n            d += 12\r\n            if t3 == '0110':\r\n                decimal_data = BinaryToDecimal(t4)\r\n                final += str((decimal_data ^ 170) + 48)\r\n            elif t3 == '0011':\r\n                decimal_data = BinaryToDecimal(t4)\r\n                final += str((decimal_data ^ 170) - 48)\r\n        print(\"Message after decoding from the stego file: \", final)\r\n\r\n    while True:\r\n        print(\"TEXT STEGANOGRAPHY OPERATIONS\")\r\n        print(\"1. Encode the Text message\")\r\n        print(\"2. Decode the Text message\")\r\n        print(\"3. Exit\")\r\n        n = int(input(\"Enter Your Choice: \"))\r\n        if n == 1:\r\n            Encode()\r\n        elif n == 2:\r\n            Decode()\r\n        elif n == 3:\r\n            break\r\n        else:\r\n            print(\"INVALID CHOICE\")\r\n\r\n\r\ntext_steganography()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libs/text_steganography.py b/libs/text_steganography.py
--- a/libs/text_steganography.py	(revision 13af924e2b43e60aea55afce4f9a4c7255a20cfd)
+++ b/libs/text_steganography.py	(date 1669529794064)
@@ -122,6 +122,7 @@
                 decimal_data = BinaryToDecimal(t4)
                 final += str((decimal_data ^ 170) - 48)
         print("Message after decoding from the stego file: ", final)
+        return final
 
     while True:
         print("TEXT STEGANOGRAPHY OPERATIONS")
@@ -132,7 +133,8 @@
         if n == 1:
             Encode()
         elif n == 2:
-            Decode()
+            d = Decode()
+            print("data _ d:{}".format(d))
         elif n == 3:
             break
         else:
